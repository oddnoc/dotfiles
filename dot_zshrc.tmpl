# chezmoi:template:missing-key=invalid
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k" # set by `omz`

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# History enhancements
HISTSIZE=10000000
setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS     # Do not write a duplicate event to the history file.
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands
setopt HIST_REDUCE_BLANKS    # Remove superfluous blanks from each command line being added to the history.

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

{{ if eq .chezmoi.os "darwin" -}}
# Magic-enter settings must be before the plugins list
MAGIC_ENTER_GIT_COMMAND='git describe && hr "." && git status -u . && hr "-" && eza -gl --git'
MAGIC_ENTER_OTHER_COMMAND='eza -gl --git'
{{- end }}
{{ if eq .chezmoi.os "freebsd" -}}
MAGIC_ENTER_OTHER_COMMAND='ls -lhv'
{{- end }}

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
{{- if eq .chezmoi.os "darwin" }}
  # macOS plugins
  alias-tips
  brew
  copypath
  gitfast
  gitolite
  macos
  mosh
  silverstripe
  symfony-console
  symfony2
  vscode
{{- end }}
{{- if ne .chezmoi.os "darwin" }}
  # non-macOS plugins
  ssh-agent
  tmux
{{- end }}
{{- if eq .chezmoi.osRelease.id "ubuntu" }}
  # ubuntu plugins
  ubuntu
{{- end }}
  # common plugins
  aliases
  composer
  git
  magic-enter
  per-directory-history
  yarn
  zoxide
)

# Support completion for composer and deployer
export SYMFONY_CONSOLE_TOOLS="composer dep"

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

{{- if eq .chezmoi.os "darwin" }}
if command -v nodenv > /dev/null 2>&1; then
    eval "$(nodenv init -)"
fi

# ZSH completions
fpath=(~/.oh-my-zsh/custom/completions $fpath)
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
fi
autoload -Uz compinit
compinit

# Don't search /etc/hosts for hostname completions
zstyle ':completion:*:hosts' hosts off

# local completions
if [ -f "$HOME/.composer-autocomplete" ] ; then
    . $HOME/.composer-autocomplete
fi

autoload -Uz add-zsh-hook
# auto PHP on Mac
function autophp() {
  if [ ! -f ./composer.json ]; then return; fi
  local VERSION=$(jaq '.require.php'< composer.json | sed -e 's/^"~\([0-9]\.[0-9]\).*/\1/')
  # Sanitize the version
  case "$VERSION" in
    8.1 | 8.2 | 8.3 | 8.4 )
        local CURRENT=$(php -r 'echo PHP_VERSION;' | cut -f 1-2 -d '.')
        if [ "$CURRENT" = "$VERSION" ]; then return; fi
        echo $'\nPHP version is wrong for this project: ' "$CURRENT != $VERSION; switching to $VERSION" $'\n' > /dev/stderr
        brew unlink php
        brew link --overwrite "php@$VERSION" && composer global update
    ;;
  esac
}
add-zsh-hook precmd autophp
{{- end }}

{{- if eq .chezmoi.os "freebsd" }}
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
if [ -f /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi
if [ -f /usr/local/share/examples/fzf/shell/key-bindings.zsh ]; then
  source /usr/local/share/examples/fzf/shell/key-bindings.zsh
  bindkey "^T" transpose-chars
fi
if [ -f /usr/local/share/examples/fzf/shell/completion.zsh ];then
  source /usr/local/share/examples/fzf/shell/completion.zsh
fi
{{- else if eq .chezmoi.os "linux" }}
if [ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi
if [ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]; then
  source /usr/share/doc/fzf/examples/key-bindings.zsh
  bindkey "^T" transpose-chars
fi
if [ -f /usr/share/doc/fzf/examples/completion.zsh ];then
  source /usr/share/doc/fzf/examples/completion.zsh
fi
{{- else if eq .chezmoi.os "darwin" }}
if [ -f /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
if [ -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# FZF -- override FZF_CTRL_T_COMMAND
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
bindkey "^T" transpose-chars
{{- end }}

{{ if ne .machine.role "dev" }}
POWERLEVEL9K_DISABLE_GITSTATUS=true
{{ end -}}
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# iTerm2 integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true
